{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "node_modules/inherits/inherits_browser.js",
    "node_modules/rdf-store-abstract/index.js",
    "node_modules/rdf-store-ldp/lite.js",
    "src/ld2h.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvt
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n",
    "function AbstractStore () {\n}\n\nAbstractStore.prototype.add = function () {\n  throw new Error('not implemented')\n}\n\nAbstractStore.prototype.delete = function () {\n  throw new Error('not implemented')\n}\n\nAbstractStore.prototype.graph = function () {\n  throw new Error('not implemented')\n}\n\nAbstractStore.prototype.match = function (subject, predicate, object, iri, callback, limit) {\n  var self = this\n\n  callback = callback || function () {}\n\n  return self.graph(iri).then(function (graph) {\n    if (graph) {\n      graph = graph.match(subject, predicate, object, limit)\n    }\n\n    callback(null, graph)\n\n    return graph\n  })\n}\n\nAbstractStore.prototype.merge = function (iri, graph, callback) {\n  var self = this\n\n  callback = callback || function () {}\n\n  return self.graph(iri).then(function (existing) {\n    if (existing) {\n      existing.addAll(graph)\n    } else {\n      existing = graph\n    }\n\n    return self.add(iri, existing, callback)\n  }).then(function () {\n    return graph\n  })\n}\n\nAbstractStore.prototype.remove = function (iri, graph, callback) {\n  var self = this\n\n  callback = callback || function () {}\n\n  return self.graph(iri).then(function (existing) {\n    if (existing) {\n      return self.add(iri, existing.difference(graph))\n    }\n  }).then(callback)\n}\n\nAbstractStore.prototype.removeMatches = function (subject, predicate, object, iri, callback) {\n  var self = this\n\n  callback = callback || function () {}\n\n  return self.graph(iri).then(function (existing) {\n    if (existing) {\n      return self.add(iri, existing.removeMatches(subject, predicate, object))\n    }\n  }).then(callback)\n}\n\nmodule.exports = AbstractStore\n",
    "var rdf = require('rdf-ext')\nvar inherits = require('inherits')\nvar AbstractStore = require('rdf-store-abstract')\n\nfunction httpSuccess (statusCode) {\n  return (statusCode >= 200 && statusCode < 300)\n}\n\nfunction LdpStore (options) {\n  options = options || {}\n\n  this.parsers = options.parsers ? new rdf.Parsers(options.parsers) : rdf.parsers\n  this.serializers = options.serializers ? new rdf.Serializers(options.serializers) : rdf.serializers\n  this.defaultParser = options.defaultParser || 'text/turtle'\n  this.defaultSerializer = options.defaultSerializer || 'text/turtle'\n  this.defaultPatchSerializer = options.defaultPatchSerializer || options.defaultSerializer || 'text/turtle'\n  this.request = options.request || rdf.defaultRequest\n}\n\ninherits(LdpStore, AbstractStore)\n\nLdpStore.prototype.add = function (iri, graph, callback, options) {\n  var self = this\n\n  return new Promise(function (resolve, reject) {\n    callback = callback || function () {}\n    options = options || {}\n\n    var method = 'PUT'\n    var contentType = self.defaultSerializer\n    var headers = {}\n\n    headers['Content-Type'] = contentType\n\n    if (options.method) {\n      method = options.method\n    }\n\n    if (options.etag) {\n      headers['If-Match'] = options.etag\n    }\n\n    if (options.useEtag && graph.etag) {\n      headers['If-Match'] = graph.etag\n    }\n\n    self.serializers.serialize(contentType, graph).then(function (data) {\n      return self.request(method, iri, headers, data, null, options).then(function (res) {\n        if (!httpSuccess(res.statusCode)) {\n          callback('status code error: ' + res.statusCode)\n          return Promise.reject('status code error: ' + res.statusCode)\n        }\n\n        callback(null, graph)\n        resolve(graph)\n      })\n    }).catch(function (error) {\n      callback(error)\n      reject(error)\n    })\n  })\n}\n\nLdpStore.prototype.delete = function (iri, callback, options) {\n  var self = this\n\n  return new Promise(function (resolve, reject) {\n    callback = callback || function () {}\n\n    self.request('DELETE', iri, {}, null, null, options).then(function (res) {\n      if (!httpSuccess(res.statusCode)) {\n        callback('status code error: ' + res.statusCode)\n        return Promise.reject('status code error: ' + res.statusCode)\n      }\n\n      callback()\n      resolve()\n    }).catch(function (error) {\n      callback(error)\n      reject(error)\n    })\n  })\n}\n\nLdpStore.prototype.graph = function (iri, callback, options) {\n  var self = this\n\n  return new Promise(function (resolve, reject) {\n    callback = callback || function () {}\n    options = options || {}\n\n    self.request('GET', iri, {'Accept': self.parsers.list().join(', ')}, null, null, options).then(function (res) {\n      // also test for status code != 0 for local browser requests\n      if (!httpSuccess(res.statusCode) && res.statusCode !== 0) {\n        callback('status code error: ' + res.statusCode)\n        return Promise.reject('status code error: ' + res.statusCode)\n      }\n\n      var contentType\n\n      if (options.contentType) {\n        contentType = options.contentType\n      } else {\n        if ('content-type' in res.headers) {\n          contentType = res.headers['content-type'].split(';')[0]\n        }\n\n        if (!contentType || !(contentType in self.parsers)) {\n          contentType = self.defaultParser\n        }\n      }\n\n      return self.parsers.parse(contentType, res.content, null, iri).then(function (graph) {\n        // copy etag header to Graph object\n        if (options.useEtag && 'etag' in res.headers) {\n          graph.etag = res.headers.etag\n        }\n\n        callback(null, graph)\n        resolve(graph)\n      })\n    }).catch(function (error) {\n      callback(error)\n      reject(error)\n    })\n  })\n}\n\nLdpStore.prototype.merge = function (iri, graph, callback, options) {\n  var self = this\n\n  return new Promise(function (resolve, reject) {\n    var contentType = self.defaultPatchSerializer\n    var headers = {}\n\n    callback = callback || function () {}\n    options = options || {}\n\n    headers['Content-Type'] = contentType\n\n    if ('etag' in options) {\n      headers['If-Match'] = options.etag\n    }\n\n    if ('useEtag' in options && options.useEtag && 'etag' in graph) {\n      headers['If-Match'] = graph.etag\n    }\n\n    self.serializers.serialize(contentType, graph).then(function (data) {\n      return self.request('PATCH', iri, headers, data, null, options).then(function (res) {\n        if (!httpSuccess(res.statusCode)) {\n          callback('status code error: ' + res.statusCode)\n          return Promise.reject('status code error: ' + res.statusCode)\n        }\n\n        callback(null, graph)\n        resolve(graph)\n      })\n    }).catch(function (error) {\n      callback(error)\n      reject(error)\n    })\n  })\n}\n\nmodule.exports = LdpStore\n",
    "\nvar rdf = require('rdf-ext');\nvar RDF2h = require('rdf2h');\nvar LdpStore = require('rdf-store-ldp/lite');\n\nfunction LD2h() {\n }\n\nLD2h.store = new LdpStore();\n\nLD2h.expand = function() {\n    function canonicalize(url) {\n        //see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue/22918332#22918332\n        var div = document.createElement('div');\n        div.innerHTML = \"<a></a>\";\n        div.firstChild.href = url; // Ensures that the href is properly escaped\n        div.innerHTML = div.innerHTML; // Run the current innerHTML back through the parser\n        return div.firstChild.href;\n    }\n    return LD2h.getMatchersGraph().then(function (matchers) {\n        return LD2h.getDataGraph().then(function (localData) {       \n            function expandWithMatchers() {\n                var resultPromises = new Array();\n                //Rendering with local RDF\n                var elems = $(\".render\");\n                elems.removeClass(\"render\");\n                for (var i = 0; i < elems.length; i++) {\n                    var elem = $(elems[i]);\n                    var context = elem.attr(\"context\");\n                    if (context) {\n                        context = RDF2h.resolveCurie(context);\n                    }\n                    var relativeURI = elem.attr(\"resource\");\n                    if (typeof relativeURI !== 'undefined') {\n                        var uri = canonicalize(relativeURI);\n                        var rendered = new RDF2h(matchers).render(localData, rdf.createNamedNode(uri), context);\n                        elem.html(rendered);\n                        resultPromises.push(expandWithMatchers());\n                    } else {\n                        console.warn(\"Element of class render without resource attribute cannot be rendered.\", elem);\n                    }\n                }\n                //Remote resources\n                var elems = $(\".fetch\");\n                elems.removeClass(\"fetch\");\n                var currentElem = 0;\n                function processsNextElem() {\n                    if (currentElem >= elems.length) {\n                        return;\n                    }\n                    var elem = $(elems[currentElem++]);\n                    var context = elem.attr(\"context\");\n                    if (context) {\n                        context = RDF2h.resolveCurie(context);\n                    }\n                    var relativeURI = elem.attr(\"resource\");\n                    if (typeof relativeURI !== 'undefined') {\n                        var uri = canonicalize(relativeURI);\n                        var relativeGraphURI = elem.attr(\"graph\");\n                        var graphUri;\n                        if (typeof relativeGraphURI !== 'undefined') {\n                            graphUri = canonicalize(relativeGraphURI);\n                        } else {\n                            graphUri = uri.split(\"#\")[0];\n                        }\n                        resultPromises.push(LD2h.store.match(\n                                null,\n                                null,\n                                null,\n                                graphUri).catch(function(error) {\n                                        console.warn(\"Error retrieving \"+graphUri+\": \"+error);\n                                    }).then(function(data) {\n                                    if (!data) {\n                                        \n                                    } else {\n                                        console.log(\"Got graph of size \"+data.length+\" from \"+graphUri);\n                                    }\n                                    var rendered = new RDF2h(matchers).render(data, rdf.createNamedNode(uri), context);\n                                    elem.html(rendered);\n                                    return expandWithMatchers();\n                                }).catch(function(error) {\n                                    console.warn(\"Error rendering \"+graphUri+\": \"+error);\n                                }));\n                    } else {\n                        console.warn(\"Element of class fetch without resource attribute cannot be rendered.\", elem);\n                    }\n                    processsNextElem();\n                }\n                processsNextElem();\n                return Promise.all(resultPromises);\n            }\n            return expandWithMatchers();     \n        });\n    });\n       \n}\n\nLD2h.getDataGraph = function() {\n    return new Promise(function(resolve, reject) {\n        var matchersTtl = $(\"#data\").text();\n        rdf.parsers.parse('text/turtle', matchersTtl, null, window.location.toString().split('#')[0]).then(function (data) {\n            console.log(data.toString());\n            resolve(data);\n        });\n    });\n};\n\nLD2h.getMatchersGraph = function () {\n    return new Promise(function(resolve, reject) {\n        function parse(matchersTtl) {\n            rdf.parsers.parse('text/turtle',matchersTtl, null, window.location.toString().split('#')[0]).then(function (matchers) {\n                console.log(matchers.toString());\n                resolve(matchers);\n            });\n        }\n        var matchersElem = $(\"#matchers\");\n        if (matchersElem[0]) {\n            if (matchersElem.attr(\"src\")) {\n                console.warn(\"Using script element with src causes is not recommended, use <link rel=\\\"matchers\\\" instead\");\n                $.get(matchersElem.attr(\"src\"), function (matchersTtl) {\n                    parse(matchersTtl);\n                });\n            } else {\n                var matchersTtl = matchersElem.text();\n                parse(matchersTtl);\n            }\n        } else {\n            var matcherLinks = $(\"link[rel='matchers']\");\n            if (matcherLinks.length > 0) {\n                var matchersGraph = rdf.createGraph();\n                var currentLink = 0;\n                var processLink = function() {\n                    var href = matcherLinks[currentLink++].href;\n                    $.get(href, function (matchersTtl) {\n                        rdf.parsers.parse('text/turtle', matchersTtl, null, window.location.toString().split('#')[0]).then(function (matchers) {\n                            console.log(matchers.toString());\n                            matchersGraph.addAll(matchers);\n                            if (matcherLinks.length > currentLink) {\n                                processLink();\n                            } else {\n                                resolve(matchersGraph);\n                            }\n                        });\n                    });\n                };\n                processLink();\n            } else {\n                console.warn(\"No matchers could be found, specify a script element with \\n\\\n                id matchers or link headers of type matchers\");\n            }\n        }\n    });\n};\n\nif (typeof window !== 'undefined') {\n    window.LD2h = LD2h;\n}\nif (typeof module !== 'undefined') {\n    module.exports = LD2h;\n}"
  ]
}